{"ast":null,"code":"var _jsxFileName = \"/Users/seojin-won/wisdom-x-wisdom/client/src/containers/CommunicationContainer.js\";\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport MediaContainer from './MediaContainer';\nimport Communication from '../components/Communication';\nimport store from '../store';\nimport { connect } from 'react-redux';\nimport { getDisplayStream } from './media-access';\n\nclass CommunicationContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      peer: {},\n      sid: '',\n      message: '',\n      audio: true,\n      video: true\n    };\n    this.handleInvitation = this.handleInvitation.bind(this);\n    this.handleHangup = this.handleHangup.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.toggleVideo = this.toggleVideo.bind(this);\n    this.toggleAudio = this.toggleAudio.bind(this);\n    this.send = this.send.bind(this);\n  }\n\n  hideAuth() {\n    this.props.media.setState({\n      bridge: 'connecting'\n    });\n  }\n\n  full() {\n    this.props.media.setState({\n      bridge: 'full'\n    });\n  }\n\n  componentDidMount() {\n    const socket = this.props.socket;\n    console.log('props', this.props);\n    this.setState({\n      video: this.props.video,\n      audio: this.props.audio\n    });\n    socket.on('create', () => this.props.media.setState({\n      user: 'host',\n      bridge: 'create'\n    }));\n    socket.on('full', this.full);\n    socket.on('bridge', role => this.props.media.init());\n    socket.on('join', () => this.props.media.setState({\n      user: 'guest',\n      bridge: 'join'\n    }));\n    socket.on('approve', ({\n      message,\n      sid\n    }) => {\n      this.props.media.setState({\n        bridge: 'approve'\n      });\n      this.setState({\n        message,\n        sid\n      });\n    });\n    socket.emit('find');\n    this.props.getUserMedia.then(stream => {\n      this.localStream = stream;\n      this.localStream.getVideoTracks()[0].enabled = this.state.video;\n      this.localStream.getAudioTracks()[0].enabled = this.state.audio;\n    });\n  }\n\n  handleInput(e) {\n    this.setState({\n      [e.target.dataset.ref]: e.target.value\n    });\n  }\n\n  send(e) {\n    e.preventDefault();\n    this.props.socket.emit('auth', this.state);\n    this.hideAuth();\n  }\n\n  handleInvitation(e) {\n    e.preventDefault();\n    this.props.socket.emit([e.target.dataset.ref], this.state.sid);\n    this.hideAuth();\n  }\n\n  toggleVideo() {\n    const video = this.localStream.getVideoTracks()[0].enabled = !this.state.video;\n    this.setState({\n      video: video\n    });\n    this.props.setVideo(video);\n  }\n\n  toggleAudio() {\n    const audio = this.localStream.getAudioTracks()[0].enabled = !this.state.audio;\n    this.setState({\n      audio: audio\n    });\n    this.props.setAudio(audio);\n  }\n\n  handleHangup() {\n    this.props.media.hangup();\n  }\n\n  getDisplay() {\n    getDisplayStream().then(stream => {\n      stream.oninactive = () => {\n        this.state.peer.removeStream(this.state.localStream);\n        this.getUserMedia().then(() => {\n          this.state.peer.addStream(this.state.localStream);\n        });\n      };\n\n      this.setState({\n        streamUrl: stream,\n        localStream: stream\n      });\n      this.localVideo.srcObject = stream;\n      this.state.peer.addStream(stream);\n    });\n  }\n\n  render() {\n    return React.createElement(Communication, Object.assign({}, this.state, {\n      toggleVideo: this.toggleVideo,\n      toggleAudio: this.toggleAudio,\n      send: this.send,\n      handleHangup: this.handleHangup,\n      handleInput: this.handleInput,\n      handleInvitation: this.handleInvitation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = store => ({\n  video: store.video,\n  audio: store.audio\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setVideo: boo => store.dispatch({\n    type: 'SET_VIDEO',\n    video: boo\n  }),\n  setAudio: boo => store.dispatch({\n    type: 'SET_AUDIO',\n    audio: boo\n  })\n});\n\nCommunicationContainer.propTypes = {\n  socket: PropTypes.object.isRequired,\n  getUserMedia: PropTypes.object.isRequired,\n  audio: PropTypes.bool.isRequired,\n  video: PropTypes.bool.isRequired,\n  setVideo: PropTypes.func.isRequired,\n  setAudio: PropTypes.func.isRequired,\n  media: PropTypes.instanceOf(MediaContainer)\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CommunicationContainer);","map":{"version":3,"sources":["/Users/seojin-won/wisdom-x-wisdom/client/src/containers/CommunicationContainer.js"],"names":["React","PropTypes","MediaContainer","Communication","store","connect","getDisplayStream","CommunicationContainer","Component","constructor","props","state","peer","sid","message","audio","video","handleInvitation","bind","handleHangup","handleInput","toggleVideo","toggleAudio","send","hideAuth","media","setState","bridge","full","componentDidMount","socket","console","log","on","user","role","init","emit","getUserMedia","then","stream","localStream","getVideoTracks","enabled","getAudioTracks","e","target","dataset","ref","value","preventDefault","setVideo","setAudio","hangup","getDisplay","oninactive","removeStream","addStream","streamUrl","localVideo","srcObject","render","mapStateToProps","mapDispatchToProps","dispatch","boo","type","propTypes","object","isRequired","bool","func","instanceOf"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { PropTypes } from 'prop-types';\nimport MediaContainer from './MediaContainer'\nimport Communication from '../components/Communication'\nimport store from '../store'\nimport { connect } from 'react-redux'\nimport {getDisplayStream} from './media-access'\n\nclass CommunicationContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      peer: {},\n      sid: '',\n      message: '',\n      audio: true,\n      video: true\n    };\n    this.handleInvitation = this.handleInvitation.bind(this);\n    this.handleHangup = this.handleHangup.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.toggleVideo = this.toggleVideo.bind(this);\n    this.toggleAudio = this.toggleAudio.bind(this);\n    this.send = this.send.bind(this);\n  }\n  hideAuth() {\n    this.props.media.setState({bridge: 'connecting'});\n  } \n  full() {\n    this.props.media.setState({bridge: 'full'});\n  }\n  componentDidMount() {\n    const socket = this.props.socket;\n    console.log('props', this.props)\n    this.setState({video: this.props.video, audio: this.props.audio});\n\n    socket.on('create', () =>\n      this.props.media.setState({user: 'host', bridge: 'create'}));\n    socket.on('full', this.full);\n    socket.on('bridge', role => this.props.media.init());\n    socket.on('join', () =>\n      this.props.media.setState({user: 'guest', bridge: 'join'}));\n    socket.on('approve', ({ message, sid }) => {\n      this.props.media.setState({bridge: 'approve'});\n      this.setState({ message, sid });\n    });\n    socket.emit('find');\n    this.props.getUserMedia\n      .then(stream => {\n          this.localStream = stream;\n          this.localStream.getVideoTracks()[0].enabled = this.state.video;\n          this.localStream.getAudioTracks()[0].enabled = this.state.audio;\n        });\n  }\n  handleInput(e) {\n    this.setState({[e.target.dataset.ref]: e.target.value});\n  }\n  send(e) {\n    e.preventDefault();\n    this.props.socket.emit('auth', this.state);\n    this.hideAuth();\n  }\n  handleInvitation(e) {\n    e.preventDefault();\n    this.props.socket.emit([e.target.dataset.ref], this.state.sid);\n    this.hideAuth();\n  }\n  toggleVideo() {\n    const video = this.localStream.getVideoTracks()[0].enabled = !this.state.video;\n    this.setState({video: video});\n    this.props.setVideo(video);\n  }\n  toggleAudio() {\n    const audio = this.localStream.getAudioTracks()[0].enabled = !this.state.audio;\n    this.setState({audio: audio});\n    this.props.setAudio(audio);\n  }\n  handleHangup() {\n    this.props.media.hangup();\n  }\n  getDisplay(){\n    getDisplayStream().then(stream => {\n      stream.oninactive = () => {\n        this.state.peer.removeStream(this.state.localStream)  \n        this.getUserMedia().then(() => {\n          this.state.peer.addStream(this.state.localStream)  \n        })\n      }\n      this.setState({ streamUrl: stream, localStream: stream })\n      this.localVideo.srcObject = stream   \n      this.state.peer.addStream(stream)   \n    })\n  }\n  render(){\n    return (\n      <Communication\n        {...this.state}\n        toggleVideo={this.toggleVideo}\n        toggleAudio={this.toggleAudio}\n        send={this.send}\n        handleHangup={this.handleHangup}\n        handleInput={this.handleInput}\n        handleInvitation={this.handleInvitation} />\n    );\n  }\n}\nconst mapStateToProps = store => ({video: store.video, audio: store.audio});\nconst mapDispatchToProps = dispatch => (\n  {\n    setVideo: boo => store.dispatch({type: 'SET_VIDEO', video: boo}),\n    setAudio: boo => store.dispatch({type: 'SET_AUDIO', audio: boo})\n  }\n);\n\nCommunicationContainer.propTypes = {\n  socket: PropTypes.object.isRequired,\n  getUserMedia: PropTypes.object.isRequired,\n  audio: PropTypes.bool.isRequired,\n  video: PropTypes.bool.isRequired,\n  setVideo: PropTypes.func.isRequired,\n  setAudio: PropTypes.func.isRequired,\n  media: PropTypes.instanceOf(MediaContainer)\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CommunicationContainer);"]},"metadata":{},"sourceType":"module"}