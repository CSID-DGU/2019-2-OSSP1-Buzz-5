{"ast":null,"code":"const async = require('async');\n\nconst pool = require('../config/dbPool.js');\n\nConsole.log('pool.js');\nmodule.exports = {\n  queryParamCnt_None: async (...args) => {\n    const query = args[0];\n    let result;\n\n    try {\n      var connection = await pool.getConnection();\n      result = await connection.query(query);\n    } catch (err) {\n      console.log(\"mysql error! err log =>\" + err);\n    } finally {\n      pool.releaseConnection(connection);\n      return result;\n    }\n  },\n  queryParamCnt_Arr: async (...args) => {\n    const query = args[0];\n    const data = args[1];\n    let result;\n\n    try {\n      var connection = await pool.getConnection();\n      result = await connection.query(query, data);\n    } catch (err) {\n      console.log(\"mysql error! err log =>\" + err);\n    } finally {\n      pool.releaseConnection(connection);\n      return result;\n    }\n  },\n  Transaction: async (...args) => {\n    let result = \"Success\";\n\n    try {\n      var connection = await pool.getConnection();\n      await connection.beginTransaction();\n      await args[0](connection, ...args);\n      await connection.commit();\n    } catch (err) {\n      await connection.rollback();\n      console.log(\"mysql error! err log =>\" + err);\n      result = undefined;\n    } finally {\n      pool.releaseConnection(connection);\n      return result;\n    }\n  }\n};\n/* Transaction 사용 예시\n\nconst db = require('../module/pool.js');\n\nawait db.Transaction( async (connection) => {\n  await connection.query(query1, [data]);\n  await connection.query(query2, [data]);\n})\n\n\nlet Transaction = await db.Transaction( async (connection) => {\n  var result_addvote = await connection.query(select_addvote,[vote, id]);\n  if(!result_addvote){\n    return next(\"500\");\n  }\n\n  let result_subcoin = await connection.query(select_subcoin,[vote, id]);\n  if(!result_subcoin){\n    return next(\"500\");\n  }\n})\n\nif(!Transaction){\n  return next(\"500\");\n}\n\n*/","map":{"version":3,"sources":["/Users/seonyounglee/2019-2-OSSP1-Buzz-5/client/src/components/Server/module/pool.js"],"names":["async","require","pool","Console","log","module","exports","queryParamCnt_None","args","query","result","connection","getConnection","err","console","releaseConnection","queryParamCnt_Arr","data","Transaction","beginTransaction","commit","rollback","undefined"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,qBAAD,CAApB;;AAEAE,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,kBAAkB,EAAG,OAAO,GAAGC,IAAV,KAAmB;AACtC,UAAMC,KAAK,GAAGD,IAAI,CAAC,CAAD,CAAlB;AACA,QAAIE,MAAJ;;AACA,QAAI;AACF,UAAIC,UAAU,GAAG,MAAMT,IAAI,CAACU,aAAL,EAAvB;AACAF,MAAAA,MAAM,GAAG,MAAMC,UAAU,CAACF,KAAX,CAAiBA,KAAjB,CAAf;AACD,KAHD,CAIA,OAAMI,GAAN,EAAW;AACTC,MAAAA,OAAO,CAACV,GAAR,CAAY,4BAA4BS,GAAxC;AACD,KAND,SAOQ;AACNX,MAAAA,IAAI,CAACa,iBAAL,CAAuBJ,UAAvB;AACA,aAAOD,MAAP;AACD;AACF,GAfc;AAgBfM,EAAAA,iBAAiB,EAAG,OAAO,GAAGR,IAAV,KAAmB;AACrC,UAAMC,KAAK,GAAGD,IAAI,CAAC,CAAD,CAAlB;AACA,UAAMS,IAAI,GAAGT,IAAI,CAAC,CAAD,CAAjB;AAEA,QAAIE,MAAJ;;AACA,QAAI;AACF,UAAIC,UAAU,GAAG,MAAMT,IAAI,CAACU,aAAL,EAAvB;AACAF,MAAAA,MAAM,GAAG,MAAMC,UAAU,CAACF,KAAX,CAAiBA,KAAjB,EAAwBQ,IAAxB,CAAf;AACD,KAHD,CAIA,OAAMJ,GAAN,EAAW;AACTC,MAAAA,OAAO,CAACV,GAAR,CAAY,4BAA4BS,GAAxC;AACD,KAND,SAOQ;AACNX,MAAAA,IAAI,CAACa,iBAAL,CAAuBJ,UAAvB;AACA,aAAOD,MAAP;AACD;AACF,GAhCc;AAiCfQ,EAAAA,WAAW,EAAG,OAAO,GAAGV,IAAV,KAAmB;AAC/B,QAAIE,MAAM,GAAG,SAAb;;AAEA,QAAG;AACD,UAAIC,UAAU,GAAG,MAAMT,IAAI,CAACU,aAAL,EAAvB;AACA,YAAMD,UAAU,CAACQ,gBAAX,EAAN;AAEA,YAAMX,IAAI,CAAC,CAAD,CAAJ,CAAQG,UAAR,EAAoB,GAAGH,IAAvB,CAAN;AACA,YAAMG,UAAU,CAACS,MAAX,EAAN;AACD,KAND,CAOA,OAAMP,GAAN,EAAU;AACR,YAAMF,UAAU,CAACU,QAAX,EAAN;AACAP,MAAAA,OAAO,CAACV,GAAR,CAAY,4BAA4BS,GAAxC;AACAH,MAAAA,MAAM,GAAGY,SAAT;AACD,KAXD,SAYQ;AACNpB,MAAAA,IAAI,CAACa,iBAAL,CAAuBJ,UAAvB;AACA,aAAOD,MAAP;AACD;AACF;AApDc,CAAjB;AAwDA","sourcesContent":["const async = require('async');\nconst pool = require('../config/dbPool.js');\n\nConsole.log('pool.js');\n\nmodule.exports = {\n  queryParamCnt_None : async (...args) => {\n    const query = args[0];\n    let result;\n    try {\n      var connection = await pool.getConnection();\n      result = await connection.query(query);\n    }\n    catch(err) {\n      console.log(\"mysql error! err log =>\" + err);\n    }\n    finally {\n      pool.releaseConnection(connection);\n      return result;\n    }\n  },\n  queryParamCnt_Arr : async (...args) => {\n    const query = args[0];\n    const data = args[1];\n\n    let result;\n    try {\n      var connection = await pool.getConnection();\n      result = await connection.query(query, data);\n    }\n    catch(err) {\n      console.log(\"mysql error! err log =>\" + err);\n    }\n    finally {\n      pool.releaseConnection(connection);\n      return result;\n    }\n  },\n  Transaction : async (...args) => {\n    let result = \"Success\";\n\n    try{\n      var connection = await pool.getConnection();\n      await connection.beginTransaction();\n\n      await args[0](connection, ...args);\n      await connection.commit();\n    }\n    catch(err){\n      await connection.rollback();\n      console.log(\"mysql error! err log =>\" + err);\n      result = undefined;\n    }\n    finally {\n      pool.releaseConnection(connection);\n      return result;\n    }\n  }\n};\n\n\n/* Transaction 사용 예시\n\nconst db = require('../module/pool.js');\n\nawait db.Transaction( async (connection) => {\n  await connection.query(query1, [data]);\n  await connection.query(query2, [data]);\n})\n\n\nlet Transaction = await db.Transaction( async (connection) => {\n  var result_addvote = await connection.query(select_addvote,[vote, id]);\n  if(!result_addvote){\n    return next(\"500\");\n  }\n\n  let result_subcoin = await connection.query(select_subcoin,[vote, id]);\n  if(!result_subcoin){\n    return next(\"500\");\n  }\n})\n\nif(!Transaction){\n  return next(\"500\");\n}\n\n*/\n"]},"metadata":{},"sourceType":"module"}