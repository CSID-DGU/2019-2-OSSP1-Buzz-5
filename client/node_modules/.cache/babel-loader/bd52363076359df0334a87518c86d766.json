{"ast":null,"code":"var _jsxFileName = \"/Users/seojin-won/wisdom-x-wisdom/client/src/containers/RoomPage.js\";\nimport React, { Component } from 'react';\nimport MediaContainer from './MediaContainer';\nimport CommunicationContainer from './CommunicationContainer';\nimport { connect } from 'react-redux';\nimport store from '../store';\nimport io from 'socket.io-client';\n\nclass RoomPage extends Component {\n  constructor(props) {\n    super(props);\n    this.getUserMedia = navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    }).catch(e => alert('getUserMedia() error: ' + e.name));\n    this.socket = io.connect();\n  }\n\n  componentDidMount() {\n    this.props.addRoom();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"asdfwer\", React.createElement(MediaContainer, {\n      media: media => this.media = media,\n      socket: this.socket,\n      getUserMedia: this.getUserMedia,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(CommunicationContainer, {\n      socket: this.socket,\n      media: this.media,\n      getUserMedia: this.getUserMedia,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = store => ({\n  rooms: new Set([...store.rooms])\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  addRoom: () => store.dispatch({\n    type: 'ADD_ROOM',\n    room: ownProps.match.params.room\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomPage);","map":{"version":3,"sources":["/Users/seojin-won/wisdom-x-wisdom/client/src/containers/RoomPage.js"],"names":["React","Component","MediaContainer","CommunicationContainer","connect","store","io","RoomPage","constructor","props","getUserMedia","navigator","mediaDevices","audio","video","catch","e","alert","name","socket","componentDidMount","addRoom","render","media","mapStateToProps","rooms","Set","mapDispatchToProps","dispatch","ownProps","type","room","match","params"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoBC,SAAS,CAACC,YAAV,CAAuBF,YAAvB,CAAoC;AACtDG,MAAAA,KAAK,EAAE,IAD+C;AAEtDC,MAAAA,KAAK,EAAE;AAF+C,KAApC,EAGjBC,KAHiB,CAGXC,CAAC,IAAIC,KAAK,CAAC,2BAA2BD,CAAC,CAACE,IAA9B,CAHC,CAApB;AAIA,SAAKC,MAAL,GAAcb,EAAE,CAACF,OAAH,EAAd;AACD;;AACDgB,EAAAA,iBAAiB,GAAG;AAClB,SAAKX,KAAL,CAAWY,OAAX;AACD;;AACDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAEC,KAAK,IAAI,KAAKA,KAAL,GAAaA,KAA7C;AAAoD,MAAA,MAAM,EAAE,KAAKJ,MAAjE;AAAyE,MAAA,YAAY,EAAE,KAAKT,YAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,sBAAD;AAAwB,MAAA,MAAM,EAAE,KAAKS,MAArC;AAA6C,MAAA,KAAK,EAAE,KAAKI,KAAzD;AAAgE,MAAA,YAAY,EAAE,KAAKb,YAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AApB8B;;AAsBjC,MAAMc,eAAe,GAAGnB,KAAK,KAAK;AAACoB,EAAAA,KAAK,EAAE,IAAIC,GAAJ,CAAQ,CAAC,GAAGrB,KAAK,CAACoB,KAAV,CAAR;AAAR,CAAL,CAA7B;;AACA,MAAME,kBAAkB,GAAG,CAACC,QAAD,EAAWC,QAAX,MACvB;AACER,EAAAA,OAAO,EAAE,MAAMhB,KAAK,CAACuB,QAAN,CAAe;AAAEE,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,IAAI,EAAEF,QAAQ,CAACG,KAAT,CAAeC,MAAf,CAAsBF;AAAhD,GAAf;AADjB,CADuB,CAA3B;;AAKA,eAAe3B,OAAO,CAACoB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CpB,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport MediaContainer from './MediaContainer'\nimport CommunicationContainer from './CommunicationContainer'\nimport { connect } from 'react-redux'\nimport store from '../store'\nimport io from 'socket.io-client'\n\nclass RoomPage extends Component {\n  constructor(props) {\n    super(props);\n    this.getUserMedia = navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    }).catch(e => alert('getUserMedia() error: ' + e.name))\n    this.socket = io.connect();\n  }\n  componentDidMount() {\n    this.props.addRoom();\n  }\n  render(){\n    return (\n      <div>\n        asdfwer\n        <MediaContainer media={media => this.media = media} socket={this.socket} getUserMedia={this.getUserMedia} />\n        <CommunicationContainer socket={this.socket} media={this.media} getUserMedia={this.getUserMedia} />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = store => ({rooms: new Set([...store.rooms])});\nconst mapDispatchToProps = (dispatch, ownProps) => (\n    {\n      addRoom: () => store.dispatch({ type: 'ADD_ROOM', room: ownProps.match.params.room })\n    }\n  );\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomPage);\n"]},"metadata":{},"sourceType":"module"}