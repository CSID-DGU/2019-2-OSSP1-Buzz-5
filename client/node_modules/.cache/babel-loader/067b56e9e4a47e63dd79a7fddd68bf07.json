{"ast":null,"code":"var _jsxFileName = \"/Users/seojin-won/wisdom-x-wisdom/client/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Home from './components/Home';\nimport Room from './containers/RoomPage';\nimport Team from './components/Team';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport styles from './App.css';\nimport CourseList from './components/CourseList';\nimport CourseForm from './components/CourseForm';\nimport { signIn } from './auth/Auth';\nimport { write } from 'fs';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.login = (email, password) => {\n      const checkLoginEmail = window.sessionStorage.getItem('email');\n\n      if (checkLoginEmail != null) {\n        var user = signIn({\n          email,\n          password\n        });\n      }\n\n      if (user != undefined) {\n        this.setState({\n          authenticated: true\n        });\n        return true;\n      }\n\n      return false;\n    };\n\n    this.logout = () => {\n      this.setState({\n        authenticated: false\n      });\n    };\n\n    this.componentDidMount = () => {\n      const email = window.sessionStorage.getItem('email');\n\n      if (email) {\n        this.login();\n      } else {\n        this.logout();\n      }\n    };\n\n    this.state = {\n      authenticated: false,\n      login: this.login,\n      logout: this.logout\n    }; // this.logined = this.logined.bind(this)\n  }\n\n  // const [user, setUser] = useState(null);\n  // const authenticated = user != null;\n  // const login = ({ email, password }) => setUser(signIn({ email, password }));\n  // const logout = () => setUser(null);\n  render() {\n    const _this$state = this.state,\n          logged = _this$state.logged,\n          onLogout = _this$state.onLogout;\n    return React.createElement(Provider, {\n      store: store,\n      value: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      basename: process.env.PUBLIC_URL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Header, {\n      authenticated: this.state.authenticated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/team\",\n      component: Team,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: props => React.createElement(Login, Object.assign({}, props, {\n        Login: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      component: Signup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), this.state.authenticated ? React.createElement(Route, {\n      path: \"/courselist\",\n      component: CourseList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), this.state.authenticated ? React.createElement(Route, {\n      path: \"/courseform\",\n      component: CourseForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/r/:room\",\n      component: Room,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(Footer, {\n      authenticated: this.state.authenticated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/seojin-won/wisdom-x-wisdom/client/src/App.js"],"names":["React","Component","useState","Provider","store","BrowserRouter","Switch","Route","Redirect","Header","Footer","Home","Room","Team","Login","Signup","styles","CourseList","CourseForm","signIn","write","App","constructor","props","login","email","password","checkLoginEmail","window","sessionStorage","getItem","user","undefined","setState","authenticated","logout","componentDidMount","state","render","logged","onLogout","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Home from './components/Home'\nimport Room from './containers/RoomPage'\nimport Team from './components/Team'\nimport Login from './components/Login'\nimport Signup from './components/Signup'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport styles from './App.css'\nimport CourseList from './components/CourseList'\nimport CourseForm from './components/CourseForm'\nimport {signIn} from './auth/Auth'\nimport { write } from 'fs'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            authenticated: false,\n            login: this.login,\n            logout: this.logout\n        }\n        // this.logined = this.logined.bind(this)\n    }\n\n    login = (email, password) => {\n        const checkLoginEmail = window.sessionStorage.getItem('email');\n        if(checkLoginEmail != null) {\n            var user = signIn({email, password});\n        }\n\n        if(user != undefined) {\n            this.setState({\n                authenticated: true\n            })\n            return true\n        }\n        return false\n    }\n\n    logout = () => {\n        this.setState({\n            authenticated: false\n        })\n    }\n\n    componentDidMount = () => {\n        const email = window.sessionStorage.getItem('email');\n        if(email) {\n            this.login()\n        } else {\n            this.logout()\n        }\n    }\n    // const [user, setUser] = useState(null);\n    // const authenticated = user != null;\n    // const login = ({ email, password }) => setUser(signIn({ email, password }));\n    // const logout = () => setUser(null);\n    render() {\n        const {logged, onLogout} = this.state\n        return (\n            <Provider store={store} value={this.state}>\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <div>\n                        <Header authenticated={this.state.authenticated}/>\n                        <Switch>\n                            <Route exact path=\"/\" component={Home} />\n                            <Route path=\"/team\" component={Team} />\n                            {/* <Route path=\"/login\" component={Login} /> */}\n                            <Route path=\"/login\" render = {(props) => <Login {...props} Login={this.login} />} />\n                            {/* <Route path=\"/login\" component={()=> <Login CheckLogin={this.logined} />} /> */}\n                            {/* <Route path=\"/login\" render={props => (<Login location={props.location}{...props}/>)} /> */}\n                            <Route path=\"/signup\" component={Signup} />\n                            { this.state.authenticated ? \n                                <Route path=\"/courselist\" component={CourseList}/>\n                                : <Redirect to=\"/login\" />\n                            }\n                            { this.state.authenticated ? \n                                <Route path=\"/courseform\" component={CourseForm}/>\n                                : <Redirect to=\"/login\" />\n                            }\n                            {/* <Route path=\"/courselist\" component={CourseList}/> */}\n                            {/* <Route path=\"/courseform\" component={CourseForm}/> */}\n                            <Route path=\"/r/:room\" component={Room} />\n                        </Switch>\n                        <Footer authenticated={this.state.authenticated}/>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}