{"ast":null,"code":"var _jsxFileName = \"/Users/seojin-won/wisdom-x-wisdom/client/src/containers/RoomPage.js\";\nimport React, { Component } from 'react';\nimport MediaContainer from './MediaContainer';\nimport CommunicationContainer from './CommunicationContainer';\nimport ChatContainer from './ChatContainer';\nimport { connect } from 'react-redux';\nimport store from '../store';\nimport io from 'socket.io-client';\nimport '../components/css/Room.scss';\n\nclass RoomPage extends Component {\n  constructor(props) {\n    super(props);\n    this.getUserMedia = navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    }).catch(e => alert('getUserMedia() error: ' + e.name));\n    this.socket = io.connect();\n  }\n\n  componentDidMount() {\n    this.props.addRoom();\n    console.log(this.props.userName);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(MediaContainer, {\n      media: media => this.media = media,\n      socket: this.socket,\n      getUserMedia: this.getUserMedia,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(CommunicationContainer, {\n      socket: this.socket,\n      media: this.media,\n      getUserMedia: this.getUserMedia,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-xl-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row-xl-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"chatLog\",\n      className: \"chatLog\",\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row-xl-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(ChatContainer, {\n      socket: this.socket,\n      name: this.props.userName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = store => ({\n  rooms: new Set([...store.rooms])\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  addRoom: () => store.dispatch({\n    type: 'ADD_ROOM',\n    room: ownProps.match.params.room\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomPage);","map":{"version":3,"sources":["/Users/seojin-won/wisdom-x-wisdom/client/src/containers/RoomPage.js"],"names":["React","Component","MediaContainer","CommunicationContainer","ChatContainer","connect","store","io","RoomPage","constructor","props","getUserMedia","navigator","mediaDevices","audio","video","catch","e","alert","name","socket","componentDidMount","addRoom","console","log","userName","render","media","mapStateToProps","rooms","Set","mapDispatchToProps","dispatch","ownProps","type","room","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MediaContainer from './MediaContainer'\nimport CommunicationContainer from './CommunicationContainer'\nimport ChatContainer from './ChatContainer'\nimport { connect } from 'react-redux'\nimport store from '../store'\nimport io from 'socket.io-client'\nimport '../components/css/Room.scss'\n\nclass RoomPage extends Component {\n  constructor(props) {\n    super(props);\n    this.getUserMedia = navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true,\n    }).catch(e => alert('getUserMedia() error: ' + e.name))\n    this.socket = io.connect();\n  }\n  componentDidMount() {\n    this.props.addRoom();\n    console.log(this.props.userName)\n  }\n  render(){\n    return (\n      <div className=\"wrap\">\n        <div className=\"row\">\n          <div className=\"col-xl-9\">\n            <MediaContainer media={media => this.media = media} socket={this.socket} getUserMedia={this.getUserMedia} />\n            <CommunicationContainer socket={this.socket} media={this.media} getUserMedia={this.getUserMedia} />\n          </div>\n          <hr/>\n          <div className=\"col-xl-3\">\n            <div className=\"col\">\n              <div className=\"row-xl-10\">\n                <textarea id=\"chatLog\" className=\"chatLog\" readOnly/>\n              </div>\n              <hr/>\n              <div className=\"row-xl-2\">\n                <ChatContainer socket={this.socket} name={this.props.userName}/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = store => ({rooms: new Set([...store.rooms])});\nconst mapDispatchToProps = (dispatch, ownProps) => (\n    {\n      addRoom: () => store.dispatch({ type: 'ADD_ROOM', room: ownProps.match.params.room })\n    }\n  );\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomPage);\n"]},"metadata":{},"sourceType":"module"}