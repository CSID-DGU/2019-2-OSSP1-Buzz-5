{"ast":null,"code":"/* 유진 추가 부분 */\nconst express = require('express');\n\nconst path = require('path');\n\nconst app = express();\n\nconst bodyParser = require('body-parser');\n\nconst router = express.Router();\nconsole.log(\"main.js \"); // var http = require('http');\n// var server = http.createServer();\n// server.listen(3000);\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\n\nvar mysql = require('mysql');\n\nvar connection = mysql.createConnection({\n  host: \"buzz-database.cj4klynaikoy.ap-northeast-2.rds.amazonaws.com\",\n  user: \"Buzz\",\n  password: \"buzz1234\",\n  port: 3306,\n  database: \"innodb\"\n});\nconnection.connect(); //db에 유저 정보 추가 부분 \n\nrouter.get('/', async (req, res, next) => {\n  console.log(\"in router \");\n  res.status(201).send({\n    \"message\": \"insert new user success\"\n  }); // try{\n  //   let insertUserQuery = 'insert into innodb.User(UserName, Email, Password)  values (?,?,?)';\n  //  // let insertResult = await db.queryParamCnt_Arr(insertUserQuery,[this.state.name, this.state.email, this.state.password]);\n  //   if(!insertResult){\n  //     console.log(\"Insert Error\");\n  //     return next(500);\n  //   }\n  //   res.status(201).send({\n  //     \"message\" : \"insert new user success\"\n  //   });\n  // } catch(err){\n  //   return next(err);\n  // }\n});\nmodule.exports = router;\napp.listen(3000, function () {\n  console.log(\"Server starting with 3000\");\n});","map":{"version":3,"sources":["C:\\Users\\gksdb\\Desktop\\2019-2-OSSP1-Buzz-5\\client\\src\\main.js"],"names":["express","require","path","app","bodyParser","router","Router","console","log","use","json","urlencoded","extended","mysql","connection","createConnection","host","user","password","port","database","connect","get","req","res","next","status","send","module","exports","listen"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,GAAG,GAAGH,OAAO,EAAnB;;AACA,MAAMI,UAAU,GAAGH,OAAO,CAAC,aAAD,CAA1B;;AAEA,MAAMI,MAAM,GAAGL,OAAO,CAACM,MAAR,EAAf;AAEAC,OAAO,CAACC,GAAR,CAAY,UAAZ,E,CAEA;AACA;AACA;;AACAL,GAAG,CAACM,GAAJ,CAAQL,UAAU,CAACM,IAAX,EAAR;AACAP,GAAG,CAACM,GAAJ,CAAQL,UAAU,CAACO,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAC;AAAV,CAAtB,CAAR;;AAEA,IAAIC,KAAK,GAAGZ,OAAO,CAAC,OAAD,CAAnB;;AAEA,IAAIa,UAAU,GAAGD,KAAK,CAACE,gBAAN,CAAuB;AACrCC,EAAAA,IAAI,EAAE,6DAD+B;AAErCC,EAAAA,IAAI,EAAE,MAF+B;AAGrCC,EAAAA,QAAQ,EAAG,UAH0B;AAIrCC,EAAAA,IAAI,EAAG,IAJ8B;AAKrCC,EAAAA,QAAQ,EAAG;AAL0B,CAAvB,CAAjB;AAQAN,UAAU,CAACO,OAAX,G,CAGA;;AACAhB,MAAM,CAACiB,GAAP,CAAW,GAAX,EAAgB,OAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,KAAyB;AACrClB,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEIgB,EAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAChB,eAAY;AADI,GAArB,EAHiC,CAOjC;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACD,CAtBP;AAwBMC,MAAM,CAACC,OAAP,GAAiBxB,MAAjB;AAENF,GAAG,CAAC2B,MAAJ,CAAW,IAAX,EAAiB,YAAW;AAC1BvB,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD,CAFD","sourcesContent":["/* 유진 추가 부분 */\r\nconst express = require('express');\r\nconst path = require('path');\r\nconst app = express();\r\nconst bodyParser = require('body-parser');\r\n\r\nconst router = express.Router();\r\n\r\nconsole.log(\"main.js \");\r\n\r\n// var http = require('http');\r\n// var server = http.createServer();\r\n// server.listen(3000);\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({extended:true}))\r\n\r\nvar mysql = require('mysql')\r\n\r\nvar connection = mysql.createConnection({\r\n   host: \"buzz-database.cj4klynaikoy.ap-northeast-2.rds.amazonaws.com\",\r\n   user: \"Buzz\",\r\n   password : \"buzz1234\",\r\n   port : 3306,\r\n   database : \"innodb\"\r\n});\r\n\r\nconnection.connect();\r\n\r\n\r\n//db에 유저 정보 추가 부분 \r\nrouter.get('/', async(req, res, next) => {\r\n    console.log(\"in router \");\r\n\r\n        res.status(201).send({\r\n             \"message\" : \"insert new user success\"\r\n        });\r\n\r\n        // try{\r\n        //   let insertUserQuery = 'insert into innodb.User(UserName, Email, Password)  values (?,?,?)';\r\n        //  // let insertResult = await db.queryParamCnt_Arr(insertUserQuery,[this.state.name, this.state.email, this.state.password]);\r\n  \r\n        //   if(!insertResult){\r\n        //     console.log(\"Insert Error\");\r\n        //     return next(500);\r\n        //   }\r\n  \r\n        //   res.status(201).send({\r\n        //     \"message\" : \"insert new user success\"\r\n        //   });\r\n        // } catch(err){\r\n        //   return next(err);\r\n        // }\r\n      });\r\n\r\n      module.exports = router;\r\n\r\napp.listen(3000, function() {\r\n  console.log(\"Server starting with 3000\");\r\n})\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}