{"version":3,"sources":["reducers/room-reducer.js","reducers/audio-reducer.js","reducers/video-reducer.js","reducers/index.js","store.js","components/Home.js","containers/HomePage.js","containers/MediaContainer.js","components/ToggleFullScreen.js","components/Communication.js","containers/CommunicationContainer.js","containers/RoomPage.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["updateRooms","state","action","type","Set","room","setAudio","audio","setVideo","video","reducers","combineReducers","rooms","roomReducer","videoReducer","audioReducer","persistedState","localStorage","getItem","JSON","parse","store","createStore","subscribe","setItem","stringify","getState","connect","props","className","itemProp","name","value","roomId","onChange","handleChange","pattern","maxLength","required","autoFocus","title","Link","to","defaultRoomId","length","map","key","HomePage","String","Date","setHours","bind","e","this","setState","target","Component","contextTypes","router","PropTypes","object","MediaBridge","bridge","user","onRemoteHangup","onMessage","sendData","setupDataHandlers","setDescription","sendDescription","hangup","init","window","RTCPeerConnection","webkitRTCPeerConnection","media","getUserMedia","then","stream","localVideo","srcObject","localStream","socket","on","undefined","getVideoTracks","stop","emit","message","pc","setRemoteDescription","RTCSessionDescription","createAnswer","catch","handleError","addIceCandidate","RTCIceCandidate","sdpMLineIndex","mlineindex","candidate","msg","dc","send","onmessage","data","console","log","onclose","remoteStream","offer","setLocalDescription","localDescription","close","iceServers","url","onicecandidate","onaddstream","remoteVideo","ondatachannel","channel","peerMediaStream","enabled","getTracks","forEach","track","addTrack","createDataChannel","createOffer","ref","autoPlay","muted","el","document","documentElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullScreen","ToggleFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","Communication","xmlns","viewBox","d","fill","onClick","toggleAudio","toggleVideo","handleHangup","onSubmit","handleInput","data-ref","placeholder","handleInvitation","href","location","CommunicationContainer","sid","full","role","getAudioTracks","dataset","preventDefault","hideAuth","React","dispatch","boo","RoomPage","navigator","mediaDevices","alert","io","path","addRoom","MediaContainer","ownProps","match","params","App","basename","process","HashRouter","Switch","Route","exact","component","Home","Room","NotFound","Boolean","hostname","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.252c21b1.chunk.js","sourcesContent":["const updateRooms = (state = [], action) => {\r\n  if (action.type === 'ADD_ROOM') {\r\n    return [...new Set([...state, action.room])];\r\n  }\r\n  return state;\r\n};\r\nexport default updateRooms;\r\n","const setAudio = (state = true, action) => (action.type === 'SET_AUDIO' ? action.audio : state);\r\nexport default setAudio;\r\n","const setVideo = (state = true, action) => (action.type === 'SET_VIDEO' ? action.video : state);\r\nexport default setVideo;\r\n","import { combineReducers } from 'redux';\r\n// Reducers\r\nimport roomReducer from './room-reducer';\r\nimport audioReducer from './audio-reducer';\r\nimport videoReducer from './video-reducer';\r\n// Combine Reducers\r\nconst reducers = combineReducers({\r\n  rooms: roomReducer,\r\n  video: videoReducer,\r\n  audio: audioReducer\r\n});\r\nexport default reducers;\r\n","import { createStore } from 'redux';\nimport reducers from './reducers';\nconst mapStoreToStorage = () =>\n\tlocalStorage.setItem('reduxState', JSON.stringify(store.getState()));\nconst persistedState = localStorage.getItem('reduxState')\n\t? JSON.parse(localStorage.getItem('reduxState'))\n\t: {\n\t\trooms: [],\n\t\tvideo: true,\n\t\taudio: true\n\t};\nconst store = createStore(reducers, persistedState);\nstore.subscribe(mapStoreToStorage);\nexport default store;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst Home = props =>\n  <div className=\"home\">\n    <div>\n      <h1 itemProp=\"headline\">Webrtc Video Room</h1>\n      <p>Please enter a room name.</p>\n      <input type=\"text\" name=\"room\" value={ props.roomId } onChange={props.handleChange} pattern=\"^\\w+$\" maxLength=\"10\" required autoFocus title=\"Room name should only contain letters or numbers.\"/>\n      <Link className=\"primary-button\" to={ '/r/' + props.roomId }>Join</Link>\n      <Link className=\"primary-button\" to={ '/r/' + props.defaultRoomId }>Random</Link>\n      { props.rooms.length !== 0 && <div>Recently used rooms:</div> }\n      { props.rooms.map(room => <Link key={room} className=\"recent-room\" to={ '/r/' + room }>{ room }</Link>) }\n    </div>\n  </div>;\n\nHome.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  defaultRoomId: PropTypes.string.isRequired,\n  roomId: PropTypes.string.isRequired,\n  rooms: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = store => ({rooms: store.rooms});\n\nexport default connect(mapStateToProps)(Home);","import React, { Component } from 'react'\nimport { PropTypes } from 'prop-types';\nimport Home from '../components/Home';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.defaultRoomId = String(new Date() - new Date().setHours(0, 0, 0, 0));\n    this.state = { roomId: this.defaultRoomId };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(e) {\n    this.setState({ roomId: e.target.value });\n  }\n  render(){\n    return (\n      <Home\n        defaultRoomId={this.defaultRoomId}\n        roomId={this.state.roomId}\n        handleChange={this.handleChange}\n      />\n    );\n  }\n}\n\nHomePage.contextTypes = {\n  router: PropTypes.object\n};\n\nexport default HomePage;","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\n\nclass MediaBridge extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bridge: '',\n      user: ''\n    }\n    this.onRemoteHangup = this.onRemoteHangup.bind(this);\n    this.onMessage = this.onMessage.bind(this);\n    this.sendData = this.sendData.bind(this);\n    this.setupDataHandlers = this.setupDataHandlers.bind(this);\n    this.setDescription = this.setDescription.bind(this);\n    this.sendDescription = this.sendDescription.bind(this);\n    this.hangup = this.hangup.bind(this);\n    this.init = this.init.bind(this);\n    this.setDescription = this.setDescription.bind(this);\n  }\n  componentWillMount() {\n    // chrome polyfill for connection between the local device and a remote peer\n    window.RTCPeerConnection = window.RTCPeerConnection || window.webkitRTCPeerConnection;\n    this.props.media(this);\n  }\n  componentDidMount() {\n    this.props.getUserMedia\n      .then(stream => this.localVideo.srcObject = this.localStream = stream);\n    this.props.socket.on('message', this.onMessage);\n    this.props.socket.on('hangup', this.onRemoteHangup);\n  }\n  componentWillUnmount() {\n    this.props.media(null);\n    if (this.localStream !== undefined) {\n      this.localStream.getVideoTracks()[0].stop();\n    }\n    this.props.socket.emit('leave');\n  }\n  onRemoteHangup() {\n    this.setState({user: 'host', bridge: 'host-hangup'});\n  }\n  onMessage(message) {\n      if (message.type === 'offer') {\n          // set remote description and answer\n          this.pc.setRemoteDescription(new RTCSessionDescription(message));\n          this.pc.createAnswer()\n            .then(this.setDescription)\n            .then(this.sendDescription)\n            .catch(this.handleError); // An error occurred, so handle the failure to connect\n\n      } else if (message.type === 'answer') {\n          // set remote description\n          this.pc.setRemoteDescription(new RTCSessionDescription(message));\n      } else if (message.type === 'candidate') {\n          // add ice candidate\n          this.pc.addIceCandidate(\n              new RTCIceCandidate({\n                  sdpMLineIndex: message.mlineindex,\n                  candidate: message.candidate\n              })\n          );\n      }\n  }\n  sendData(msg) {\n    this.dc.send(JSON.stringify(msg))\n  }\n  // Set up the data channel message handler\n  setupDataHandlers() {\n      this.dc.onmessage = e => {\n          var msg = JSON.parse(e.data);\n          console.log('received message over data channel:' + msg);\n      };\n      this.dc.onclose = () => {\n        this.remoteStream.getVideoTracks()[0].stop();\n        console.log('The Data Channel is Closed');\n      };\n  }\n  setDescription(offer) {\n    this.pc.setLocalDescription(offer);\n  }\n  // send the offer to a server to be forwarded to the other peer\n  sendDescription() {\n    this.props.socket.send(this.pc.localDescription);\n  }\n  hangup() {\n    this.setState({user: 'guest', bridge: 'guest-hangup'});\n    this.pc.close();\n    this.props.socket.emit('leave');\n  }\n  handleError(e) {\n    console.log(e);\n  }\n  init() {\n    // wait for local media to be ready\n    const attachMediaIfReady = () => {\n      this.dc = this.pc.createDataChannel('chat');\n      this.setupDataHandlers();\n      console.log('attachMediaIfReady')\n      this.pc.createOffer()\n        .then(this.setDescription)\n        .then(this.sendDescription)\n        .catch(this.handleError); // An error occurred, so handle the failure to connect\n    }\n    // set up the peer connection\n    // this is one of Google's public STUN servers\n    // make sure your offer/answer role does not change. If user A does a SLD\n    // with type=offer initially, it must do that during  the whole session\n    this.pc = new RTCPeerConnection({iceServers: [{url: 'stun:stun.l.google.com:19302'}]});\n    // when our browser gets a candidate, send it to the peer\n    this.pc.onicecandidate = e => {\n        console.log(e, 'onicecandidate');\n        if (e.candidate) {\n            this.props.socket.send({\n                type: 'candidate',\n                mlineindex: e.candidate.sdpMLineIndex,\n                candidate: e.candidate.candidate\n            });\n        }\n    };\n    // when the other side added a media stream, show it on screen\n    this.pc.onaddstream = e => {\n        console.log('onaddstream', e) \n        this.remoteStream = e.stream;\n        this.remoteVideo.srcObject = this.remoteStream = e.stream;\n        this.setState({bridge: 'established'});\n    };\n    this.pc.ondatachannel = e => {\n        // data channel\n        this.dc = e.channel;\n        this.setupDataHandlers();\n        this.sendData({\n          peerMediaStream: {\n            video: this.localStream.getVideoTracks()[0].enabled\n          }\n        });\n        //sendData('hello');\n    };\n    // attach local media to the peer connection\n    this.localStream.getTracks().forEach(track => this.pc.addTrack(track, this.localStream));\n    // call if we were the last to connect (to increase\n    // chances that everything is set up properly at both ends)\n    if (this.state.user === 'host') {\n      this.props.getUserMedia.then(attachMediaIfReady);\n    }  \n  }\n  render(){\n    return (\n      <div className={`media-bridge ${this.state.bridge}`}>\n        <video className=\"remote-video\" ref={(ref) => this.remoteVideo = ref} autoPlay></video>\n        <video className=\"local-video\" ref={(ref) => this.localVideo = ref} autoPlay muted></video>\n      </div>\n    );\n  }\n}\nMediaBridge.propTypes = {\n  socket: PropTypes.object.isRequired,\n  getUserMedia: PropTypes.object.isRequired,\n  media: PropTypes.func.isRequired\n}\nexport default MediaBridge;","const el = document.documentElement;\ndocument.fullscreenEnabled = document.fullscreenEnabled ||\ndocument.webkitFullscreenEnabled ||\ndocument.mozFullScreenEnabled ||\ndocument.msFullscreenEnabled;\ndocument.exitFullscreen = document.exitFullscreen ||\ndocument.webkitExitFullscreen ||\ndocument.mozCancelFullScreen ||\ndocument.msExitFullscreen;\nel.requestFullscreen = el.requestFullscreen ||\nel.webkitRequestFullscreen ||\nel.mozRequestFullScreen ||\nel.msRequestFullScreen;\nconst ToggleFullScreen = () => {\n  // full-screen available?\n  if (document.fullscreenEnabled) {\n    // are we full-screen?\n    document.fullscreenElement ||\n    document.webkitFullscreenElement ||\n    document.mozFullScreenElement ||\n    document.msFullscreenElement ? document.exitFullscreen() : el.requestFullscreen();\n  }\n};\nexport default ToggleFullScreen;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ToggleFullScreen from './ToggleFullScreen';\n\nconst Communication = props => \n  <div className=\"auth\">\n    <div className=\"media-controls\">\n      <Link className=\"call-exit-button\" to=\"/\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 36 36\"  className=\"svg\">\n          <path d=\"M30 16.5h-18.26l8.38-8.38-2.12-2.12-12 12 12 12 2.12-2.12-8.38-8.38h18.26v-3z\" fill=\"white\"/>\n        </svg>\n      </Link>\n      <button onClick={props.toggleAudio} className={'audio-button-' + props.audio}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\" className=\"svg\">\n          <path className=\"on\" d=\"M38 22h-3.4c0 1.49-.31 2.87-.87 4.1l2.46 2.46C37.33 26.61 38 24.38 38 22zm-8.03.33c0-.11.03-.22.03-.33V10c0-3.32-2.69-6-6-6s-6 2.68-6 6v.37l11.97 11.96zM8.55 6L6 8.55l12.02 12.02v1.44c0 3.31 2.67 6 5.98 6 .45 0 .88-.06 1.3-.15l3.32 3.32c-1.43.66-3 1.03-4.62 1.03-5.52 0-10.6-4.2-10.6-10.2H10c0 6.83 5.44 12.47 12 13.44V42h4v-6.56c1.81-.27 3.53-.9 5.08-1.81L39.45 42 42 39.46 8.55 6z\" fill=\"white\"></path>\n          <path className=\"off\" d=\"M24 28c3.31 0 5.98-2.69 5.98-6L30 10c0-3.32-2.68-6-6-6-3.31 0-6 2.68-6 6v12c0 3.31 2.69 6 6 6zm10.6-6c0 6-5.07 10.2-10.6 10.2-5.52 0-10.6-4.2-10.6-10.2H10c0 6.83 5.44 12.47 12 13.44V42h4v-6.56c6.56-.97 12-6.61 12-13.44h-3.4z\" fill=\"white\"></path>\n        </svg>\n      </button>\n      <button onClick={props.toggleVideo} className={'video-button-' + props.video}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\" className=\"svg\">\n          <path className=\"on\" d=\"M40 8H15.64l8 8H28v4.36l1.13 1.13L36 16v12.36l7.97 7.97L44 36V12c0-2.21-1.79-4-4-4zM4.55 2L2 4.55l4.01 4.01C4.81 9.24 4 10.52 4 12v24c0 2.21 1.79 4 4 4h29.45l4 4L44 41.46 4.55 2zM12 16h1.45L28 30.55V32H12V16z\" fill=\"white\"></path>\n          <path className=\"off\" d=\"M40 8H8c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h32c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zm-4 24l-8-6.4V32H12V16h16v6.4l8-6.4v16z\" fill=\"white\"></path>\n        </svg>\n      </button>\n      <button onClick={ToggleFullScreen} className=\"fullscreen-button\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\" className=\"svg\">\n          <path className=\"on\" d=\"M10 32h6v6h4V28H10v4zm6-16h-6v4h10V10h-4v6zm12 22h4v-6h6v-4H28v10zm4-22v-6h-4v10h10v-4h-6z\" fill=\"white\"></path>\n          <path className=\"off\" d=\"M14 28h-4v10h10v-4h-6v-6zm-4-8h4v-6h6v-4H10v10zm24 14h-6v4h10V28h-4v6zm-6-24v4h6v6h4V10H28z\" fill=\"white\"></path>\n        </svg>\n      </button>\n      <button onClick={props.handleHangup} className=\"hangup-button\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\" className=\"svg\">\n          <path d=\"M24 18c-3.21 0-6.3.5-9.2 1.44v6.21c0 .79-.46 1.47-1.12 1.8-1.95.98-3.74 2.23-5.33 3.7-.36.35-.85.57-1.4.57-.55 0-1.05-.22-1.41-.59L.59 26.18c-.37-.37-.59-.87-.59-1.42 0-.55.22-1.05.59-1.42C6.68 17.55 14.93 14 24 14s17.32 3.55 23.41 9.34c.37.36.59.87.59 1.42 0 .55-.22 1.05-.59 1.41l-4.95 4.95c-.36.36-.86.59-1.41.59-.54 0-1.04-.22-1.4-.57-1.59-1.47-3.38-2.72-5.33-3.7-.66-.33-1.12-1.01-1.12-1.8v-6.21C30.3 18.5 27.21 18 24 18z\" fill=\"white\"></path>\n        </svg>\n      </button>\n    </div>\n    <div className=\"request-access\">\n      <p><span className=\"you-left\">You hung up.&nbsp;</span>Send an invitation to join the room.</p>\n      <form onSubmit={props.send}>\n        <input type=\"text\" autoFocus onChange={props.handleInput} data-ref=\"message\"  maxLength=\"30\" required placeholder=\"Hi, I'm John Doe.\" />\n        <button className=\"primary-button\">Send</button>\n      </form>\n    </div>\n    <div className=\"grant-access\">\n      <p>A peer has sent you a message to join the room:</p>\n      <div>{props.message}</div>\n      <button onClick={props.handleInvitation} data-ref=\"reject\" className=\"primary-button\">Reject</button>\n      <button onClick={props.handleInvitation} data-ref=\"accept\" className=\"primary-button\">Accept</button>\n    </div>\n    <div className=\"room-occupied\">\n      <p>Please, try another room!</p>\n      <Link  className=\"primary-button\" to=\"/\">OK</Link>\n    </div>\n    <div className=\"waiting\">\n      <p><span>Waiting for someone to join this room:&nbsp;</span><a href={window.location.href}>{window.location.href}</a><br/>\n      <span className=\"remote-left\">The remote side hung up.</span></p>\n    </div>\n  </div>\n\nCommunication.propTypes = {\n  message: PropTypes.string.isRequired,\n  audio: PropTypes.bool.isRequired,\n  video: PropTypes.bool.isRequired,\n  toggleVideo: PropTypes.func.isRequired,\n  toggleAudio: PropTypes.func.isRequired,\n  getContent: PropTypes.func.isRequired,\n  send: PropTypes.func.isRequired,\n  handleHangup: PropTypes.func.isRequired,\n  handleInput: PropTypes.func.isRequired,\n  handleInvitation: PropTypes.func.isRequired\n};\n\nexport default Communication;\n","import React from 'react'\nimport { PropTypes } from 'prop-types';\nimport MediaContainer from './MediaContainer'\nimport Communication from '../components/Communication'\nimport store from '../store'\nimport { connect } from 'react-redux'\nclass CommunicationContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sid: '',\n      message: '',\n      audio: true,\n      video: true\n    };\n    this.handleInvitation = this.handleInvitation.bind(this);\n    this.handleHangup = this.handleHangup.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.toggleVideo = this.toggleVideo.bind(this);\n    this.toggleAudio = this.toggleAudio.bind(this);\n    this.send = this.send.bind(this);\n  }\n  hideAuth() {\n    this.props.media.setState({bridge: 'connecting'});\n  } \n  full() {\n    this.props.media.setState({bridge: 'full'});\n  }\n  componentDidMount() {\n    const socket = this.props.socket;\n    console.log('props', this.props)\n    this.setState({video: this.props.video, audio: this.props.audio});\n\n    socket.on('create', () =>\n      this.props.media.setState({user: 'host', bridge: 'create'}));\n    socket.on('full', this.full);\n    socket.on('bridge', role => this.props.media.init());\n    socket.on('join', () =>\n      this.props.media.setState({user: 'guest', bridge: 'join'}));\n    socket.on('approve', ({ message, sid }) => {\n      this.props.media.setState({bridge: 'approve'});\n      this.setState({ message, sid });\n    });\n    socket.emit('find');\n    this.props.getUserMedia\n      .then(stream => {\n          this.localStream = stream;\n          this.localStream.getVideoTracks()[0].enabled = this.state.video;\n          this.localStream.getAudioTracks()[0].enabled = this.state.audio;\n        });\n  }\n  handleInput(e) {\n    this.setState({[e.target.dataset.ref]: e.target.value});\n  }\n  send(e) {\n    e.preventDefault();\n    this.props.socket.emit('auth', this.state);\n    this.hideAuth();\n  }\n  handleInvitation(e) {\n    e.preventDefault();\n    this.props.socket.emit([e.target.dataset.ref], this.state.sid);\n    this.hideAuth();\n  }\n  toggleVideo() {\n    const video = this.localStream.getVideoTracks()[0].enabled = !this.state.video;\n    this.setState({video: video});\n    this.props.setVideo(video);\n  }\n  toggleAudio() {\n    const audio = this.localStream.getAudioTracks()[0].enabled = !this.state.audio;\n    this.setState({audio: audio});\n    this.props.setAudio(audio);\n  }\n  handleHangup() {\n    this.props.media.hangup();\n  }\n  render(){\n    return (\n      <Communication\n        {...this.state}\n        toggleVideo={this.toggleVideo}\n        toggleAudio={this.toggleAudio}\n        send={this.send}\n        handleHangup={this.handleHangup}\n        handleInput={this.handleInput}\n        handleInvitation={this.handleInvitation} />\n    );\n  }\n}\nconst mapStateToProps = store => ({video: store.video, audio: store.audio});\nconst mapDispatchToProps = dispatch => (\n  {\n    setVideo: boo => store.dispatch({type: 'SET_VIDEO', video: boo}),\n    setAudio: boo => store.dispatch({type: 'SET_AUDIO', audio: boo})\n  }\n);\n\nCommunicationContainer.propTypes = {\n  socket: PropTypes.object.isRequired,\n  getUserMedia: PropTypes.object.isRequired,\n  audio: PropTypes.bool.isRequired,\n  video: PropTypes.bool.isRequired,\n  setVideo: PropTypes.func.isRequired,\n  setAudio: PropTypes.func.isRequired,\n  media: PropTypes.instanceOf(MediaContainer)\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CommunicationContainer);","import React, { Component } from 'react';\nimport MediaContainer from './MediaContainer'\nimport CommunicationContainer from './CommunicationContainer'\nimport { connect } from 'react-redux'\nimport store from '../store'\nimport io from 'socket.io-client'\n\nclass RoomPage extends Component {\n  constructor(props) {\n    super(props);\n    this.getUserMedia = navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    }).catch(e => alert('getUserMedia() error: ' + e.name))\n    this.socket = io.connect(\"https://csid-dgu.github.io/2019-2-OSSP1-Buzz-5\", {path: \"/socket.io\"});\n    //this.socket = io()\n  }\n  componentDidMount() {\n    this.props.addRoom();\n  }\n  render() {\n    return (\n      <div>\n        <MediaContainer media={media => this.media = media} socket={this.socket} getUserMedia={this.getUserMedia} />\n        <CommunicationContainer socket={this.socket} media={this.media} getUserMedia={this.getUserMedia} />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = store => ({ rooms: new Set([...store.rooms]) });\nconst mapDispatchToProps = (dispatch, ownProps) => (\n  {\n    addRoom: () => store.dispatch({ type: 'ADD_ROOM', room: ownProps.match.params.room })\n  }\n);\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomPage);\n","import React from 'react';\nexport default () => <h1>404.. This page is not found!</h1>;\n","import React, { Component } from 'react'\n// import { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Home from './containers/HomePage'\nimport Room from './containers/RoomPage'\nimport NotFound from './components/NotFound'\nimport styles from './App.css'\n\nexport class App extends Component {\n    render() {\n        return (\n            <Provider store={store} basename={process.env.PUBLIC_URL}>\n                <HashRouter>\n                    <Switch>\n                        <Route exact path=\"/\" component={Home} />\n                        <Route path=\"/r/:room\" component={Room} />\n                        <Route path=\"*\" component={NotFound} />\n                    </Switch>\n                </HashRouter>\n            </Provider>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import React from 'react'\n// import { render } from 'react-dom'\n// import { Provider } from 'react-redux'\n// import store from './store';\n// import { BrowserRouter, Switch, Route } from 'react-router-dom';\n// import Home from './containers/HomePage'\n// import Room from './containers/RoomPage'\n// import NotFound from './components/NotFound'\n// import styles from './app.css'\n\n// render(\n// \t<Provider store={store}>\n// \t\t<BrowserRouter basename={process.env.basename}>\n// \t\t\t<Switch>\n// \t\t\t\t<Route exact path=\"/\" component={Home} />\n// \t\t\t\t<Route path=\"/r/:room\" component={Room} />\n// \t\t\t\t<Route path=\"*\" component={NotFound} />\n// \t\t\t</Switch>\n// \t\t</BrowserRouter>\n// \t</Provider>,\n// \tdocument.getElementById('app')\n// );\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('app'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}